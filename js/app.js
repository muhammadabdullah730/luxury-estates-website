/**
 * Real Estate Website - Main Application Script
 * Shared functionality across all pages
 * Generated by AI on 2023-11-15
 */

document.addEventListener('DOMContentLoaded', function() {
  // Initialize mobile menu toggle
  initMobileMenu();
  
  // Initialize theme switcher
  initThemeSwitcher();
  
  // Initialize smooth scrolling for anchor links
  initSmoothScrolling();
  
  // Initialize counters on home page if they exist
  if (document.querySelector('.stat-number')) {
    initCounters();
  }
  
  // Initialize carousel on home page if it exists
  if (document.querySelector('.carousel')) {
    initCarousel();
  }
  
  // Initialize property favoriting
  initFavorites();
  
  // Initialize modals
  initModals();
});

/**
 * Initialize mobile menu toggle
 */
function initMobileMenu() {
  const menuBtn = document.querySelector('.mobile-menu-btn');
  const nav = document.querySelector('.nav');
  
  if (menuBtn && nav) {
    menuBtn.addEventListener('click', function() {
      nav.classList.toggle('active');
      menuBtn.innerHTML = nav.classList.contains('active') ? 
        '<i class="fas fa-times"></i>' : 
        '<i class="fas fa-bars"></i>';
    });
  }
}

/**
 * Initialize theme switcher (dark/light mode)
 */
function initThemeSwitcher() {
  const themeToggle = document.querySelector('.theme-toggle input');
  
  if (themeToggle) {
    // Check for saved theme preference or use preferred color scheme
    const savedTheme = localStorage.getItem('theme') || 
                      (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light');
    
    // Apply the saved theme
    document.documentElement.setAttribute('data-theme', savedTheme);
    themeToggle.checked = savedTheme === 'dark';
    
    // Add event listener for theme toggle
    themeToggle.addEventListener('change', function() {
      const newTheme = this.checked ? 'dark' : 'light';
      document.documentElement.setAttribute('data-theme', newTheme);
      localStorage.setItem('theme', newTheme);
    });
  }
}

/**
 * Initialize smooth scrolling for anchor links
 */
function initSmoothScrolling() {
  document.querySelectorAll('a[href^="#"]').forEach(anchor => {
    anchor.addEventListener('click', function(e) {
      e.preventDefault();
      
      const targetId = this.getAttribute('href');
      const targetElement = document.querySelector(targetId);
      
      if (targetElement) {
        const headerHeight = document.querySelector('.header').offsetHeight;
        const targetPosition = targetElement.getBoundingClientRect().top + window.pageYOffset - headerHeight;
        
        window.scrollTo({
          top: targetPosition,
          behavior: 'smooth'
        });
        
        // Close mobile menu if open
        const nav = document.querySelector('.nav');
        if (nav && nav.classList.contains('active')) {
          nav.classList.remove('active');
          document.querySelector('.mobile-menu-btn').innerHTML = '<i class="fas fa-bars"></i>';
        }
      }
    });
  });
}

/**
 * Initialize animated counters
 */
function initCounters() {
  const counters = document.querySelectorAll('.stat-number');
  const speed = 200;
  
  counters.forEach(counter => {
    const target = parseInt(counter.getAttribute('data-target'));
    const count = +counter.innerText;
    const increment = target / speed;
    
    if (count < target) {
      counter.innerText = Math.ceil(count + increment);
      setTimeout(initCounters, 1);
    } else {
      counter.innerText = target.toLocaleString();
    }
  });
}

/**
 * Initialize property carousel
 */
function initCarousel() {
  const carousel = document.querySelector('.carousel-inner');
  const items = document.querySelectorAll('.carousel-item');
  const prevBtn = document.querySelector('.carousel-prev');
  const nextBtn = document.querySelector('.carousel-next');
  const indicators = document.querySelectorAll('.carousel-indicator');
  
  let currentIndex = 0;
  const itemCount = items.length;
  
  function updateCarousel() {
    const offset = -currentIndex * 100;
    carousel.style.transform = `translateX(${offset}%)`;
    
    // Update indicators
    indicators.forEach((indicator, index) => {
      indicator.classList.toggle('active', index === currentIndex);
    });
  }
  
  function nextSlide() {
    currentIndex = (currentIndex + 1) % itemCount;
    updateCarousel();
  }
  
  function prevSlide() {
    currentIndex = (currentIndex - 1 + itemCount) % itemCount;
    updateCarousel();
  }
  
  // Auto-advance every 5 seconds
  let autoSlide = setInterval(nextSlide, 5000);
  
  // Pause auto-slide on hover
  carousel.parentElement.addEventListener('mouseenter', () => {
    clearInterval(autoSlide);
  });
  
  carousel.parentElement.addEventListener('mouseleave', () => {
    autoSlide = setInterval(nextSlide, 5000);
  });
  
  // Button controls
  if (nextBtn) nextBtn.addEventListener('click', nextSlide);
  if (prevBtn) prevBtn.addEventListener('click', prevSlide);
  
  // Indicator controls
  indicators.forEach((indicator, index) => {
    indicator.addEventListener('click', () => {
      currentIndex = index;
      updateCarousel();
    });
  });
}

/**
 * Initialize property favoriting system
 */
function initFavorites() {
  const favoriteBtns = document.querySelectorAll('.favorite-btn');
  
  favoriteBtns.forEach(btn => {
    btn.addEventListener('click', function() {
      const propertyId = this.getAttribute('data-id');
      toggleFavorite(propertyId, this);
    });
    
    // Check if property is already favorited
    const propertyId = btn.getAttribute('data-id');
    if (propertyId && isFavorite(propertyId)) {
      btn.classList.add('active');
    }
  });
}

/**
 * Toggle property favorite status
 */
function toggleFavorite(propertyId, element) {
  let favorites = JSON.parse(localStorage.getItem('favorites')) || [];
  
  if (favorites.includes(propertyId)) {
    favorites = favorites.filter(id => id !== propertyId);
    if (element) element.classList.remove('active');
  } else {
    favorites.push(propertyId);
    if (element) element.classList.add('active');
  }
  
  localStorage.setItem('favorites', JSON.stringify(favorites));
}

/**
 * Check if property is favorited
 */
function isFavorite(propertyId) {
  const favorites = JSON.parse(localStorage.getItem('favorites')) || [];
  return favorites.includes(propertyId);
}

/**
 * Initialize modal windows
 */
function initModals() {
  // Open modal buttons
  document.querySelectorAll('[data-modal]').forEach(btn => {
    btn.addEventListener('click', function() {
      const modalId = this.getAttribute('data-modal');
      openModal(modalId);
    });
  });
  
  // Close modal buttons
  document.querySelectorAll('.modal-close').forEach(btn => {
    btn.addEventListener('click', closeModal);
  });
  
  // Close modal when clicking outside content
  document.querySelectorAll('.modal').forEach(modal => {
    modal.addEventListener('click', function(e) {
      if (e.target === this) {
        closeModal();
      }
    });
  });
  
  // Close modal with Escape key
  document.addEventListener('keydown', function(e) {
    if (e.key === 'Escape') {
      closeModal();
    }
  });
}

/**
 * Open specified modal
 */
function openModal(modalId) {
  const modal = document.getElementById(modalId);
  if (modal) {
    document.body.style.overflow = 'hidden';
    modal.classList.add('active');
  }
}

/**
 * Close all modals
 */
function closeModal() {
  document.querySelectorAll('.modal').forEach(modal => {
    modal.classList.remove('active');
  });
  document.body.style.overflow = '';
}

/**
 * Format price with currency symbol
 */
function formatPrice(price, currency = 'USD') {
  const formatter = new Intl.NumberFormat('en-US', {
    style: 'currency',
    currency: currency,
    minimumFractionDigits: 0,
    maximumFractionDigits: 0
  });
  
  return formatter.format(price);
}

/**
 * Debounce function for performance optimization
 */
function debounce(func, wait) {
  let timeout;
  return function() {
    const context = this, args = arguments;
    clearTimeout(timeout);
    timeout = setTimeout(() => {
      func.apply(context, args);
    }, wait);
  };
}